name: CI
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and test
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Setup dotnet 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      - name: Setup dotnet 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test .NET Framework 4.8
        run: dotnet test -c Release -f net48 -r ./artifacts -l trx --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude=[xunit.*]*

      - name: Test .NET Core 3.1
        run: dotnet test -c Release -f netcoreapp3.1 -r ./artifacts -l trx --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude=[xunit.*]*

      - name: Test .NET 5
        run: dotnet test -c Release -f net5 -r ./artifacts -l trx --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude=[xunit.*]*

      - name: Test .NET 6
        run: dotnet test -c Release -f net6 -r ./artifacts -l trx --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude=[xunit.*]*

      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./test/BinaryEncoding.Tests/coverage.net48.opencover.xml,./test/BinaryEncoding.Tests/coverage.netcoreapp31.opencover.xml,./test/BinaryEncoding.Tests/coverage.net5.opencover.xml,./test/BinaryEncoding.Tests/coverage.net6.opencover.xml
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

  calc-version:
    name: Calculate version
    runs-on: ubuntu-latest
    needs:
      - build
    outputs:
      version: ${{ steps.nbgv.outputs.SemVer2 }}
      prerelease: ${{ github.base_ref != 'refs/heads/master' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: dotnet/nbgv@master
        id: nbgv

  publish:
    name: Pack and Publish
    runs-on: ubuntu-latest
    needs:
      - calc-version
    steps:
      - name: Version Output Check
        run: |
          echo "${{ needs.calc-version.outputs.version }} - ${{ needs.calc-version.outputs.prerelease }}"

      # - name: Checkout
      #   uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0

      # - name: Setup dotnet 6.0
      #   uses: actions/setup-dotnet@v1
      #   with:
      #   dotnet-version: "6.0.x"

      # - name: Build and Publish to NuGet
      #   uses: drusellers/publish-nuget@master
      #   with:
      #     project-file-path: src/BinaryEncoding/BinaryEncoding.csproj
      #     version: ${{ needs.calc-version.outputs.version }}
      #     tag-commit: true
      #     tag-format: v*
      #     nuget-key: ${{secrets.NUGET_API_KEY}}
      #     include-symbols: true

      # - name: Create release
      #   uses: "marvinpinto/action-automatic-releases@v1.2.1"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     prerelease: ${{ needs.calc-version.outputs.prerelease }}
      #     files: |
      #       *.nupkg
